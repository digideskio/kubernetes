ambassador:
  image: cpuguy83/docker-grand-ambassador:0.9.1
  volumes:
  - /var/run/docker.sock:/var/run/docker.sock
  command: "-name docker_apiserver_1"
etcd:
  hostname: etcd
  image: quay.io/coreos/etcd:v2.0.12
  ports: [ "4001:4001" ]
  command: >
    --listen-client-urls 'http://etcd:4001'
    --advertise-client-urls 'http://etcd:4001'
    --initial-cluster-state new
minion1:
  hostname: minion1
  privileged: true
  image: mesosphere/minion-dind:latest
  command:
  - /bin/bash
  - "-c"
  - >
    echo "Hostname: $(hostname -f) ($(hostname -f | xargs resolveip))" &&
    await-health-check -t=60 http://apiserver:8888/healthz &&
    hyperkube kubelet
    --address=$(resolveip minion1)
    --api-servers=http://apiserver:8888
    --cluster-dns=10.10.10.10
    --cluster-domain=cluster.local
    --v=2
  links:
  - etcd
  - "ambassador:apiserver"
  volumes:
  - /var/tmp/mesosslave1:/var/lib/docker
minion2:
  hostname: minion2
  privileged: true
  image: mesosphere/minion-dind:latest
  command:
  - /bin/bash
  - "-c"
  - >
    echo "Hostname: $(hostname -f) ($(hostname -f | xargs resolveip))" &&
    await-health-check -t=60 http://apiserver:8888/healthz &&
    hyperkube kubelet
    --address=$(resolveip minion2)
    --api-servers=http://apiserver:8888
    --cluster-dns=10.10.10.10
    --cluster-domain=cluster.local
    --v=2
  links:
  - etcd
  - "ambassador:apiserver"
  volumes:
  - /var/tmp/mesosslave2:/var/lib/docker
apiserver:
  hostname: apiserver
  image: mesosphere/kubernetes-mesos
  entrypoint:
  - /bin/bash
  - "-c"
  - >
    echo "Hostname: $(hostname -f) ($(hostname -f | xargs resolveip))" &&
    await-health-check http://etcd:4001/health &&
    km apiserver
    --address=$(resolveip apiserver)
    --external-hostname=apiserver
    --etcd-servers=http://etcd:4001
    --portal-net=10.10.10.0/24
    --port=8888
    --service-node-port-range=30000-32767
    --v=2
  ports: [ "8888:8888" ]
  links:
  - etcd
controller:
  hostname: controller
  image: mesosphere/kubernetes-mesos
  entrypoint:
  - /bin/bash
  - "-c"
  - >
    echo "Hostname: $(hostname -f) ($(hostname -f | xargs resolveip))" &&
    await-health-check -t=60 http://apiserver:8888/healthz &&
    hyperkube controller-manager
    --master=http://apiserver:8888
    --v=2
  links:
  - apiserver
scheduler:
  hostname: scheduler
  image: mesosphere/kubernetes-mesos
  entrypoint:
  - /bin/bash
  - "-c"
  - >
    echo "Hostname: $(hostname -f) ($(hostname -f | xargs resolveip))" &&
    await-health-check -t=60 http://apiserver:8888/healthz &&
    hyperkube scheduler
    --address=$(resolveip scheduler)
    --master=http://apiserver:8888
    --v=2
  links:
  - minion1
  - minion2
  - apiserver
